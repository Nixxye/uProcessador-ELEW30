$date
  Thu Oct 31 18:25:22 2024
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module tb $end
$var reg 16 ! in_a[15:0] $end
$var reg 16 " in_b[15:0] $end
$var reg 16 # out_a[15:0] $end
$var reg 4 $ in_op[3:0] $end
$var reg 1 % a $end
$var reg 1 & b $end
$var reg 1 ' c $end
$scope module uut $end
$var reg 16 ( dataina[15:0] $end
$var reg 16 ) datainb[15:0] $end
$var reg 4 * opselect[3:0] $end
$var reg 16 + dataout[15:0] $end
$var reg 1 , zero $end
$var reg 1 - bigger $end
$var reg 1 . less $end
$var reg 16 / muxop0[15:0] $end
$var reg 16 0 muxop1[15:0] $end
$var reg 16 1 muxop2[15:0] $end
$scope module mux $end
$var reg 16 2 a[15:0] $end
$var reg 16 3 b[15:0] $end
$var reg 16 4 c[15:0] $end
$var reg 4 5 sel[3:0] $end
$var reg 16 6 muxout[15:0] $end
$upscope $end
$scope module adder $end
$var reg 16 7 a[15:0] $end
$var reg 16 8 b[15:0] $end
$var reg 16 9 sum[15:0] $end
$upscope $end
$scope module subtractor $end
$var reg 16 : a[15:0] $end
$var reg 16 ; b[15:0] $end
$var reg 16 < sub[15:0] $end
$upscope $end
$scope module shifter $end
$var reg 16 = a[15:0] $end
$var reg 16 > shift[15:0] $end
$var reg 1 ? left $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000000000000000 !
b0000000000000000 "
b0000000000000000 #
b0000 $
U%
U&
U'
b0000000000000000 (
b0000000000000000 )
b0000 *
b0000000000000000 +
U,
U-
U.
b0000000000000000 /
b0000000000000000 0
b0000000000000000 1
b0000000000000000 2
b0000000000000000 3
b0000000000000000 4
b0000 5
b0000000000000000 6
b0000000000000000 7
b0000000000000000 8
b0000000000000000 9
b0000000000000000 :
b0000000000000000 ;
b0000000000000000 <
b0000000000000000 =
b0000000000000000 >
1?
#50000000
